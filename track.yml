slug: consul-k8s-l7-observability
id: u3cxfe1z4m2y
type: track
title: Layer 7 Observability with Kubernetes, Prometheus, Grafana
teaser: Collect and visualize layer 7 metrics from services in your Kubernetes cluster   using
  Consul  Connect, Prometheus, and Grafana.
description: |-
  A service mesh is made up of proxies deployed locally alongside each service
  instance, which control network traffic between their local instance and other
  services on the network. These proxies "see" all the traffic that runs through
  them, and in addition to securing that traffic, they can also collect data about
  it. Starting with version 1.5, Consul Connect is able to configure Envoy proxies
  to collect layer 7 metrics including HTTP status codes, request latency, along
  with many others, and export those to monitoring tools like Prometheus.

  In this guide, you will deploy a basic metrics collection and visualization
  pipeline on a Kubernetes cluster using the official Helm charts for Consul,
  Prometheus, and Grafana. This pipeline will collect and display metrics from a
  demo application.

  > **Tip:** While this guide shows you how to deploy a metrics pipeline on
  Kubernetes, all the technologies the guide uses are platform agnostic;
  Kubernetes is not necessary to collect and visualize layer 7 metrics with Consul
  Connect.

  **Learning Objectives:**
  - Configure Consul Connect with metrics using Helm
  - Install Prometheus and Grafana using Helm
  - Install and start the demo application
  - Collect metrics
icon: https://storage.googleapis.com/instruqt-frontend/assets/hashicorp/tracks/consul.png
tags:
- ""
owner: hashicorp
developers:
- eveld@hashicorp.com
private: false
published: true
challenges:
- slug: lab
  id: 6lols1mmmwfh
  type: challenge
  title: Lab
  teaser: Follow the guide at https://learn.hashicorp.com and try it out yourself
    in this hands-on lab.
  assignment: |-
    Install Consul.
    ```
    helm install -f guide/consul-values.yaml --name consul ./consul-helm
    ```

    Install Prometheus.
    ```
    helm install -f guide/prometheus-values.yaml --name prometheus stable/prometheus
    ```

    Install Grafana.
    ```
    helm install -f guide/grafana-values.yaml --name grafana stable/grafana
    ```

    Edit the `guide/app/website.yml` file and move the annotations from the deployment metadata to the template metadata (This will not be necessary once the PR is merged).

    Install Emojify application.
    ```
    kubectl apply -f guide/app
    ```

    Start load test.
    ```
    kubectl apply -f guide/traffic.yaml
    ```
  notes:
  - type: text
    contents: Please wait while we create your **sandboxed environment**. This can
      take up to **a minute** to complete.
  tabs:
  - title: Consul UI
    type: service
    hostname: kubernetes
    path: /ui/
    port: 30085
  - title: Grafana
    type: service
    hostname: kubernetes
    port: 30030
  - title: Emojify
    type: service
    hostname: kubernetes
    port: 30000
  - title: Shell
    type: terminal
    hostname: kubernetes
  difficulty: basic
  timelimit: 3600
checksum: "13703806375577319277"
